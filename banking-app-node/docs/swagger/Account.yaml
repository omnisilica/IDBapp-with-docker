paths:
  /accounts/customer/{customerId}:
    get:
      summary: Get all customer's accounts
      tags: [Accounts]
      parameters:
        - in: path
          name: customerId
          required: true
          schema:
            type: string
          description: The customer ID
      responses:
        "200":
          description: A list of accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Account"
    post:
      summary: Create a new account for customer
      tags: [Accounts]
      parameters:
        - in: path
          name: customerId
          required: true
          schema:
            type: string
          description: The customer ID
      requestBody:
        description: The account to create
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
      responses:
        201:
          description: The account created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        400:
          description: Error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                  status:
                    type: number
                    example: 400
        500:
          description: Error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                  status:
                    type: number
                    example: 500
  /accounts/customer/{customerId}/{accountId}:
    get:
      summary: Get single account
      parameters:
        - in: path
          name: customerId
          required: true
          schema:
            type: string
          description: The customer ID
        - in: path
          name: accountId
          required: true
          schema:
            type: string
          description: The account ID
      tags: [Accounts]
      responses:
        "200":
          description: The account
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
    put:
      summary: Update an account
      parameters:
        - in: path
          name: customerId
          required: true
          schema:
            type: string
          description: The customer ID
        - in: path
          name: accountId
          required: true
          schema:
            type: string
          description: The account ID
      requestBody:
        description: The account to update
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
      tags: [Accounts]
      responses:
        "200":
          description: The updated account
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
    delete:
      summary: Delete an account
      parameters:
        - in: path
          name: customerId
          required: true
          schema:
            type: string
          description: The customer ID
        - in: path
          name: accountId
          required: true
          schema:
            type: string
          description: The account ID
      tags: [Accounts]
      responses:
        "200":
          description: The account deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        400:
          description: Error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                  status:
                    type: number
                    example: 400
        500:
          description: Error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                  status:
                    type: number
                    example: 500
